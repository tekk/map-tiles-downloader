name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-binaries:
    name: Build binaries (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install . pyinstaller
      - name: Build binary
        shell: bash
        run: |
          pyinstaller --onefile --name map-tiles-downloader src/map_tiles_downloader/__main__.py
          mkdir -p build-out
          EXT=""
          if [ "${{ runner.os }}" = "Windows" ]; then
            EXT=".exe"
          fi
          ARCH=$(python -c "import platform; m = platform.machine(); print({'AMD64': 'x86_64', 'x86_64': 'x86_64', 'arm64': 'arm64', 'aarch64': 'arm64'}.get(m, m))")
          SRC="dist/map-tiles-downloader$EXT"
          TARGET="build-out/map-tiles-downloader-${{ runner.os }}-$ARCH-${{ github.ref_name }}$EXT"
          cp "$SRC" "$TARGET"
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.os }}
          path: build-out/*

  build-packages:
    name: Build sdist and wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Build dists
        run: |
          python -m pip install --upgrade pip
          pip install build
          python -m build
      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-dists
          path: dist/*

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-binaries, build-packages]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          merge-multiple: true
      - name: Create Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
